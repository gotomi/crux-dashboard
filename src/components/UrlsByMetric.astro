---
export interface Props {
  data: any;
}

import UrlWithIcon from '../components/UrlWithIcon.astro';
import MetricCell from '../components/MetricCell.astro';

const { data } = Astro.props;

function allGoodPercent() {
    const minimal = {};
    data.metrics.forEach(item => {
        const v = Object.values(item);
        const allMin = v.map(item => typeof item === 'object' ? item.histogram[0] : 2000).reduce((a,b) => Math.min(a,b));
        minimal[item.url] = allMin;
    }
    );
    return minimal;
}

function compareByMinimal(a,b) {
        const y = a[0].minimal;
        const x = b[0].minimal;
        if (y > x ) return -1
        if (x < y ) return 1
        return 0;
}

function getMetric() {
    const minimal = allGoodPercent()
    
    return data.metrics.map(item => {
    let obj = [];
    obj.push({url: item.url.replace("https://",""), minimal:minimal[item.url]});
    ["FCP", "LCP", "FID", "CLS"].forEach(metric => {
         obj.push({p75:item[metric].p75, rank: item[metric].rank});
    })
    return obj
    }).sort(compareByMinimal)

}
const table = [["url", "FCP", "LCP", "FID", "CLS"]].concat(getMetric());



const tableHeading = table[0];
---
<table>
        <tr>
            {tableHeading.map((cell) => (        
                <td>{cell}</td>
        )
        )}
        </tr>

{table.slice(1,table.length).map((row) => (
        <tr>
            {row.map((cell) => (        
                cell.p75 ? <MetricCell metric={cell}/> : <td><UrlWithIcon url={cell.url}/> <div class="all-good"><div style={"width:" + cell.minimal + "%"}>{cell.minimal}% </div></div></td>
        )
        )}
        </tr>
    ))}
</table>
<style>

    table {
        width: 100%;
    }
    tr:first-child td{
        background: #333;
        color: #fff;
        font-weight: bold;
    }
    table, tr, td {
        border: 1px solid #ddd;
        border-collapse: collapse;
        padding: 10px
    }
    .all-good{
        background-color: #ddd;
        font-size: 60%;
    }
    .all-good div{
        background-color: #34A853;
        padding: 1px 3px;
        color: #000;
    }
</style>
